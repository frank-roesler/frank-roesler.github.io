<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Home on Frank Rösler</title>
    <link>https://frank-roesler.github.io/de/</link>
    <description>Recent content in Home on Frank Rösler</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 26 May 2020 11:51:44 +0100</lastBuildDate><atom:link href="https://frank-roesler.github.io/de/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Forschung</title>
      <link>https://frank-roesler.github.io/de/research/</link>
      <pubDate>Tue, 26 May 2020 11:53:04 +0100</pubDate>
      
      <guid>https://frank-roesler.github.io/de/research/</guid>
      <description>Hier ist eine aktuelle Liste meiner Forschungsartikel. Im Menu links gibt es zu jeder Arbeit einen kurzen Überblick.
  Publikationen und Preprints Preprints:  Frank Rösler, Christiane Tretter; Computing Klein-Gordon Eigenvalues, Preprint.
(Eine Matlab-Implementierung des Algorithmus gibt es hier) Jonathan Ben-Artzi, Marco Marletta, and Frank Rösler. Universal algorithms for solving inverse spectral problems, Preprint, arXiv:2203.13078.
(Eine Matlab-Implementierung des Algorithmus gibt es hier)  Peer-Reviewed:  Frank Rösler, Alexei Stepanenko; Computing Eigenvalues of the Laplacian on Rough Domains, Math.</description>
    </item>
    
    <item>
      <title>Lehre</title>
      <link>https://frank-roesler.github.io/de/teaching/</link>
      <pubDate>Tue, 26 May 2020 14:23:52 +0100</pubDate>
      
      <guid>https://frank-roesler.github.io/de/teaching/</guid>
      <description>Frühjahr 2023  Seminar über Sobolevräume an der Universiät Bern. Assistent für Mathematik II für Naturwissenschaftler an der Universiät Bern.  Herbst 2022/23  Assistent für Funktionalanalysis an der Universiät Bern. Assistent für Mathematik I für Naturwissenschaftler a an der Universiät Bern.  Wintersemester 2019/20  Vorlesung über Maßtheorie an der Universität Cardiff.  Handgeschriebenes Vorlesungsskript: Maßtheorie Videos der gesamten Vorlesung sind frei verfügbar: Measure Theory Cardiff 2019    Sommersemester 2018  Assistent für die Vorlesung &amp;ldquo;Analysis 2&amp;rdquo; von Prof.</description>
    </item>
    
    <item>
      <title>CV</title>
      <link>https://frank-roesler.github.io/de/cv/</link>
      <pubDate>Tue, 26 May 2020 14:30:19 +0100</pubDate>
      
      <guid>https://frank-roesler.github.io/de/cv/</guid>
      <description>Grants und Preise  2020: 2-Jahre Marie Skłodowska Curie Fellowship für das Projekt Computational Complexity in Quantum Mechanics (COCONUT) an der Universität Cardiff. 2019: LMS Scheme 1 Conference Grant (amount £4,000) für den Workshop &amp;ldquo;Small Scales and Homogenisation&amp;rdquo; 2015: EPS Poster Prize, verliehen von der European Physical Society, im Rahmen des Workshops Pseudo-Hermitian Hamiltonians in Quantum Physics.  Ausbildung und Abschlüsse  seit 2022: Wissenschaftlicher Mitarbeiter, Departement Mathematik und Statistik, Universität Bern, Bern, Schweiz.</description>
    </item>
    
    <item>
      <title>Links</title>
      <link>https://frank-roesler.github.io/de/links/</link>
      <pubDate>Tue, 26 May 2020 14:32:05 +0100</pubDate>
      
      <guid>https://frank-roesler.github.io/de/links/</guid>
      <description>Diese Seite enthält Links zu aktuellen Events und Arbeiten, die für mich gegenwärtig von Interesse sind.
Cardiff Online Analysis Seminar (CAOS): Während der COVID-19 Beschränkungen organisiert Cardiff ein online-Analysis-Seminar: https://jbenartzi.github.io/seminars.html
(Related: Eine Große Zahl von online-Forschungsseminaren ist hier aufgelistet: https://researchseminars.org/)
Springer E-Books: Springer hat kürzlich über 400 E-Books kostenlos zum Download zur Verfügung gestellt: https://www.reddit.com/r/FreeEBOOKS/comments/g34xi5/408_free_ebooks_from_springer/
Forschungsprojekte:  COCONUT: Computational Complexity in Quantum Mechanics QUEST@Cardiff: https://cardiffquest.blog/ Jonathan Ben-Artzi (Gruppenleiter): https://jbenartzi.github.io/research.html  Konferenzen und Workshops: Anstehend:  June 19-22, 2023, Stockholm (Schweden): Analysis and mathematical physics – AMP2022 (in memory of Sergey Naboko)  Vergangen:  International Workshop on Operator Theory and its Applications 6.</description>
    </item>
    
    <item>
      <title>Hobbyprojekte</title>
      <link>https://frank-roesler.github.io/de/miscellaneous/</link>
      <pubDate>Tue, 26 May 2020 15:13:25 +0100</pubDate>
      
      <guid>https://frank-roesler.github.io/de/miscellaneous/</guid>
      <description>Hier sammle ich einige kleine mathematische Simulationen, die ich als Hobby programmiert habe. Alle Simulationen sind simple Matlab- bzw. Python-Implementierungen und die zugehörigen Codes sind frei verfügbar auf Github.</description>
    </item>
    
    <item>
      <title>Kontakt</title>
      <link>https://frank-roesler.github.io/de/contact/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://frank-roesler.github.io/de/contact/</guid>
      <description>Bitte benutzen Sie dieses Formular, um mich zu kontaktieren.
Dein Name Email Adresse Eine Email Adresse wird benötigt.  Nachricht   </description>
    </item>
    
    <item>
      <title>Hobbyprojekte</title>
      <link>https://frank-roesler.github.io/de/perfdom/</link>
      <pubDate>Sun, 16 Aug 2020 21:06:16 +0100</pubDate>
      
      <guid>https://frank-roesler.github.io/de/perfdom/</guid>
      <description>Homogenisierung in perforierten Gebieten Diffusion in einem Gebiet mit periodisch verteilten Hindernissen kann makroskopisch durch eine reduzierte Diffusionskonstante angenähert werden. Diese sogenannte homohenisierte Konstante kann numerisch berechnet werden, indem man eine Differentialgleichung in einer einzigen Zelle löst. Die klassische Theorie wurde in diesem Artikel entwickelt.
Zwei unterschiedliche Berechnungsmethoden habe ich in Matlab implementiert. Das Bild zeigt die Lösung der Gleichung in einer Zelle mit kreisrundem Hindernis.
Der Quellcode ist frei verfügbar auf https://github.</description>
    </item>
    
    <item>
      <title>Hobbyprojekte</title>
      <link>https://frank-roesler.github.io/de/sir/</link>
      <pubDate>Sun, 16 Aug 2020 21:06:16 +0100</pubDate>
      
      <guid>https://frank-roesler.github.io/de/sir/</guid>
      <description>Fit SIR-Modell Als kleines Python-Lernprojekt habe ich dieses kleine Programm geschrieben, das simulierte Daten für eine Infektionswelle in einer population generiert und dann ein einfaches SIR-Modell fittet. Der User kann auf einer grafischen Benutzeroberfläche zwischen zwei fit-Methoden wählen (Methode des steilsten Abstiegs bzw. konjugierte Gradienten).
Der Quellcode ist frei verfügbar auf https://github.com/frank-roesler/SIR_fit
 </description>
    </item>
    
    <item>
      <title>Hobbyprojekte</title>
      <link>https://frank-roesler.github.io/de/bloch/</link>
      <pubDate>Mon, 01 Jun 2020 16:49:58 +0100</pubDate>
      
      <guid>https://frank-roesler.github.io/de/bloch/</guid>
      <description>Modellierung von MRT-Pulsen Kernspinresonanz In der Magnetresonanztomographie (MRT) werden die Spins der Atomkerne in unserem Körper in ein starkes homogenes Magnetfeld $\mathsf{B_0}$ gebracht und durch einen Radiofrequenzpuls (RF) angeregt. Nach der Anregung rotieren die Spins gemeinsam in Phase und produzieren eine messbare makroskopische Magnetisierung $\mathsf{M(t)}$, die in der Zeit nach dem RF-Puls wieder zerfällt. Dieses messbare Signal wird in der MRT als &amp;ldquo;free induction decay&amp;rdquo; (FID) bezeichnet. Die Form des RF-Pulses ist zentral für die Kontrolle des angeregten Frequenzbereichs.</description>
    </item>
    
    <item>
      <title>Hobbyprojekte</title>
      <link>https://frank-roesler.github.io/de/bloch2/</link>
      <pubDate>Mon, 01 Jun 2020 16:49:58 +0100</pubDate>
      
      <guid>https://frank-roesler.github.io/de/bloch2/</guid>
      <description>Diesen Eintrag gibt es bisher nur auf englisch. Deutsche Übersetzung folgt in Kürze!
Deep Learning for MRI Pulse Sequences Frequency profile of RF pulse As explained in this post, the excitation response of nuclear spins with respect to a radiofrequency (RF) pulse is modeled by the Bloch equations, which can be solved numerically. The frequency profile excited by a given pulse can be obtained by solving the equations for a range of values of $\mathsf{\Delta\omega}$ around 0.</description>
    </item>
    
    <item>
      <title>Hobbyprojekte</title>
      <link>https://frank-roesler.github.io/de/cs/</link>
      <pubDate>Mon, 01 Jun 2020 16:49:58 +0100</pubDate>
      
      <guid>https://frank-roesler.github.io/de/cs/</guid>
      <description>Bildrekonstruction via Compressed Sensing Compressed Sensing ist mittlerweile die State-of-the-Art-Methode zur Bildrekonstruktion aus gemessenen Daten. Ein solches Beispiel sind Röntgen-CT-Messungen und die Radontransformation. Die Hauptidee hinter Compressed Sensing liegt in der Beobachtung, dass die meisten Bilder von Interesse in einer angemessenen Darstellung dünn besetzt (engl. sparse) sind. Dies bedeutet, dass sie deutlich komprimiert werden können, ohne viel Information zu verlieren. Das nächste Bild veranschaulicht dieses Phänomen für die Fourier-Darstellung eines sog.</description>
    </item>
    
    <item>
      <title>Hobbyprojekte</title>
      <link>https://frank-roesler.github.io/de/denoising/</link>
      <pubDate>Mon, 01 Jun 2020 16:49:58 +0100</pubDate>
      
      <guid>https://frank-roesler.github.io/de/denoising/</guid>
      <description>Rauschunterdrückung in Messdaten Methoden des maschinellen Lernens können in der Signalverarbeitung eingesetzt werden, um die Qualität von verrauschten Signalen zu verbessern. Ein Beispiel, das ich in PyTorch programmiert habe, legt nahe, dass diese Methode für Spektrosopie-Signale gut funktioniert. Solche Signale haben typischerweise Lorentz-Form. Reale Messdaten sind allerdings nie identisch mit der glatten Kurve, die die Theorie vorhersagt, sondern vielmehr verrauscht, wie das folgende Bild qualitativ zeigt (dunkel = Realteil des komplexen Signals, hell = Imaginärteil).</description>
    </item>
    
    <item>
      <title>Hobbyprojekte</title>
      <link>https://frank-roesler.github.io/de/flatten/</link>
      <pubDate>Mon, 01 Jun 2020 16:49:58 +0100</pubDate>
      
      <guid>https://frank-roesler.github.io/de/flatten/</guid>
      <description>Flatten the curve Um die &amp;ldquo;flatten the curve&amp;rdquo;-Strategie gegen COVID-19 zu veranschaulichen, habe ich diese kleine Simulation in Python programmiert. Blaue Punkte stehen für gesunde Individuen, rote Punkte für infizierte. Wenn ein blauer Punkt einem roten zunahe kommt, wird er infiziert (und damit infektiös). Nach einer bestimmten Zeit genesen infizierte Punkte von alleine. Man sieht, dass diese einfache Dynamik global zu einer Art Welle führt.
Der Code ist hier: https://github.com/frank-roesler/Files/blob/master/Flatten_curve.py</description>
    </item>
    
    <item>
      <title>Hobbyprojekte</title>
      <link>https://frank-roesler.github.io/de/gan/</link>
      <pubDate>Mon, 01 Jun 2020 16:49:58 +0100</pubDate>
      
      <guid>https://frank-roesler.github.io/de/gan/</guid>
      <description>Wie lässt man einen Computer halluzinieren? Ein sogenanntes Generative adversarial Network (GAN) ist eine Kombination aus zwei neuronalen Netzen (engl. &amp;ldquo;Generator&amp;rdquo; und &amp;ldquo;Discriminator&amp;rdquo;), die kombiniert werden, um Bilder eines bestimmten Typs zu erzeugen. Die beiden Netze konkurrieren gegeneinander: Zunächst erzeugt der Generator ein Bild aus einem Zufallsvektor, danach vergleicht der Discriminator das erzeugte Bild mit einem vorher festgelegten Trainingsdatensatz.
Der Discriminator wird darauf trainiert, die künstlichen Bilder von den echten Bildern (d.</description>
    </item>
    
    <item>
      <title>Hobbyprojekte</title>
      <link>https://frank-roesler.github.io/de/radon/</link>
      <pubDate>Mon, 01 Jun 2020 16:49:58 +0100</pubDate>
      
      <guid>https://frank-roesler.github.io/de/radon/</guid>
      <description>Inverse Radon-Transformation Die Radon-Transformation ist eine mathematische Abbildung, mit wichtigen Anwendungen in der medizinischen Physik. Sie beschreibt die Rohdaten, die bei einer Röntgen- oder CT-Messung entstehen (sogenannte Sinogramme). Die inverse Radon-Transformation (IRT) erlaubt die Rekonstruktion des ursprünglichen Bildes aus dem Sinogramm und ist damit von zentraler Bedeutung für das Erstellen von Röntgen- und CT-Bildern. Eine MATLAB-Funktion, die diese Rekonstruktion automatisch berechnet, habe ich programmiert und auf meiner GitHub-Seite veröffentlicht.
  </description>
    </item>
    
    <item>
      <title>Hobbyprojekte</title>
      <link>https://frank-roesler.github.io/de/reconstruction/</link>
      <pubDate>Mon, 01 Jun 2020 16:49:58 +0100</pubDate>
      
      <guid>https://frank-roesler.github.io/de/reconstruction/</guid>
      <description>Bildrekonstruktion Beispiel für Bildrekonstruktion durch &amp;ldquo;Inpainting&amp;rdquo; mit der Wärmeleitungsgleichung. Anfangs sind 97% des Bildes verloren. Benutzt man die verbliebenen Pixel als &amp;ldquo;Randbedingung&amp;rdquo; für einen simulierten Wärmefluss, lässt sich ein großer Teil der Information des Originalbildes zurückgewinnen.
Der Matlab-Code ist hier abrufbar: https://github.com/frank-roesler/Files/blob/master/Inpainting.m   </description>
    </item>
    
    <item>
      <title>Hobbyprojekte</title>
      <link>https://frank-roesler.github.io/de/reinforcement/</link>
      <pubDate>Mon, 01 Jun 2020 16:49:58 +0100</pubDate>
      
      <guid>https://frank-roesler.github.io/de/reinforcement/</guid>
      <description>Reinforcement Learning Reinforcement Learning ist eine Methode, Computern beizubringen, Kontrollaufgaben zu lösen. Neuronale Netzwerke sind hier in modernen Anwengungen ein wichtiger Baustein. Hier stelle ich einen Algorithmus namend &amp;ldquo;Deep Q-Network&amp;rdquo; (DQN) vor, den ich implementiert habe, um das klassische TicTacToe (X gegen O) Spiel zu spielen.
Kurz gesagt funktioniert ein DQN-Algorithmus, indem er jedem Zustand des Spielfeldes (d.h. jeder Anordnung von X und O) und jedem möglichen Spielzug einen Nutzen zuordnet.</description>
    </item>
    
    <item>
      <title>Hobbyprojekte</title>
      <link>https://frank-roesler.github.io/de/segmentation/</link>
      <pubDate>Mon, 01 Jun 2020 16:49:58 +0100</pubDate>
      
      <guid>https://frank-roesler.github.io/de/segmentation/</guid>
      <description>Bildsegmentierung mit FCNs Auf meiner GitHub-Seite habe ich nun eine &amp;ldquo;fully convolutional&amp;rdquo; (FCN) Version von Alexnet (siehe https://arxiv.org/abs/1411.4038) in Pytorch implementiert. Der Code in diesem Paket hat vor allem ein Ziel: Einfachheit. Erstens erkennt das Modell nur eine Art von Objekt (plus Hintergrund), zweitens sind alle Funktionen und Klassen explizit und transparent; nichts ist vortrainiert. Ziel ist es, die Grundlagen verständlich zu machen
Dieser Code wurde an dem &amp;ldquo;Penn-Fudan&amp;rdquo;-Fußgänger-Datensatz und dem COCO-Datensatz getestet (siehe Bilder).</description>
    </item>
    
    <item>
      <title>Hobbyprojekte</title>
      <link>https://frank-roesler.github.io/de/turing/</link>
      <pubDate>Mon, 01 Jun 2020 16:49:58 +0100</pubDate>
      
      <guid>https://frank-roesler.github.io/de/turing/</guid>
      <description>Turing-Mechanismus Einfaches Beispiel für &amp;ldquo;Turing pattern formation&amp;rdquo;; programmiert in Matlab. Zwei Lösungen eines gekoppelten Systems partieller Differentialgleichungen konkurrieren, bis sich ein stabiles Gleichgewicht einstellt. Es wird seit langem vermutet, dass dieser Mechanismus der Entstehung der Fellzeichnung von Tieren unterliegt.
Der Matlab-Code ist hier verfügbar: https://github.com/frank-roesler/Files/blob/master/Turing_FinDiff.m   </description>
    </item>
    
    <item>
      <title>Rezepte</title>
      <link>https://frank-roesler.github.io/de/rezept/</link>
      <pubDate>Mon, 01 Jun 2020 16:49:58 +0100</pubDate>
      
      <guid>https://frank-roesler.github.io/de/rezept/</guid>
      <description>Focaccia Rezept Zutaten:  400g Mehl 330ml Wasser 4-5g Hefe 1 geh. TL Salz Olivenöl  Zubereitung:  Bei kaltem Wetter: Backofen auf 50º stellen, 1-2 Minuten vorheizen lassen, dann ausschalten. Mehl, 300ml Wasser, Hefe und einen Schuss Olivenöl zu einem glatten Teig verkneten, dann im ausgeschalteten Backofen abgedeckt 20-30min ruhen lassen. Salz und 30ml Wasser hinzufügen und nochmal gut durchkneten. Dann:  1:10h abgedeckt im ausgeschalteten Backofen gehen lassen, eine Runde falten (siehe Video), 1:10h abgedeckt im ausgeschalteten Backofen gehen lassen, eine Runde falten, 1:10h abgedeckt im ausgeschalteten Backofen gehen lassen, eine Runde falten.</description>
    </item>
    
    <item>
      <title>Forschung</title>
      <link>https://frank-roesler.github.io/de/research_graphs/</link>
      <pubDate>Tue, 26 May 2020 11:53:04 +0100</pubDate>
      
      <guid>https://frank-roesler.github.io/de/research_graphs/</guid>
      <description>Diesen Eintrag gibt es bisher nur auf englisch. Deutsche Übersetzung folgt in Kürze!
A Strange Vertex Condition Coming from Nowhere Research article:  Frank Rösler; A Strange Vertex Condition Coming from Nowhere. SIAM J. Math. Anal., 53(3), 3098&amp;ndash;3122, 2021  Overview: This is one of my single author papers in the field of asymptotic analysis. It is concerned with the combined effect of two domain properties: thin geometry and perforation.</description>
    </item>
    
    <item>
      <title>Forschung</title>
      <link>https://frank-roesler.github.io/de/research_helmholtz/</link>
      <pubDate>Tue, 26 May 2020 11:53:04 +0100</pubDate>
      
      <guid>https://frank-roesler.github.io/de/research_helmholtz/</guid>
      <description>Diesen Eintrag gibt es bisher nur auf englisch. Deutsche Übersetzung folgt in Kürze!
Computing the Sound of the Sea in a Seashell Research article:  Jonathan Ben-Artzi, Marco Marletta, Frank Rösler; Computing the Sound of the Sea in a Seashell. Found. Comput. Math., 2021.
Click here to download the slides of a recent talk on the subject. A Matlab package based on the article is available here  Overview: This work considers the scattering of waves by obstacles in 2 dimensions.</description>
    </item>
    
    <item>
      <title>Forschung</title>
      <link>https://frank-roesler.github.io/de/research_inverse/</link>
      <pubDate>Tue, 26 May 2020 11:53:04 +0100</pubDate>
      
      <guid>https://frank-roesler.github.io/de/research_inverse/</guid>
      <description>Diesen Eintrag gibt es bisher nur auf englisch. Deutsche Übersetzung folgt in Kürze!
Reconstructing a Potential From its Scattering Data Research article:  Jonathan Ben-Artzi, Marco Marletta, and Frank Rösler. Universal algorithms for solving inverse spectral problems, Preprint, arXiv:2203.13078.
(A Matlab implementation of the algorithm is available here)  Overview: The so-called spectral problem for a Hamiltonian operator $\mathsf{-\frac{d^2}{dx^2}+q}$ consists of finding its spectrum given the potential function $\mathsf q$. In certain cases (e.</description>
    </item>
    
    <item>
      <title>Forschung</title>
      <link>https://frank-roesler.github.io/de/research_kg/</link>
      <pubDate>Tue, 26 May 2020 11:53:04 +0100</pubDate>
      
      <guid>https://frank-roesler.github.io/de/research_kg/</guid>
      <description>Diesen Eintrag gibt es bisher nur auf englisch. Deutsche Übersetzung folgt in Kürze!
Computing Bound States in Relativistic Quantum Mechanics Research article:  Frank Rösler, Christiane Tretter; Computing Klein-Gordon Eigenvalues, in preparation. (A Matlab implementation of the algorithm is available here)  Overview: The computational spectral problem in quantum mechanics is slowly becoming more and more well understood. Particularly the numerical complexity of the classical (nonrelativistic) theory that goes back to Schrödinger and Heisenberg has been studied in a number of different situations by a number of different authors (including myself and my collaborators), see here, here or here.</description>
    </item>
    
    <item>
      <title>Forschung</title>
      <link>https://frank-roesler.github.io/de/research_perfdom/</link>
      <pubDate>Tue, 26 May 2020 11:53:04 +0100</pubDate>
      
      <guid>https://frank-roesler.github.io/de/research_perfdom/</guid>
      <description>Diesen Eintrag gibt es bisher nur auf englisch. Deutsche Übersetzung folgt in Kürze!
Homogenisation in Perforated Domains Research article:  Patrick Dondl, Kirill Cherednichenko, Frank Rösler; Norm-Resolvent Convergence in Perforated Domains. Asymptotic Analysis, vol. 110, no. 3-4, pp. 163-184, 2018  Overview: A perforated domain is a domain, from which a periodic arrangement of balls is removed, where both the distance $\mathsf \epsilon$ and the radii $\mathsf{r_\epsilon}$ of the balls are much smaller than the diameter of the domain, as shown in the following figure.</description>
    </item>
    
    <item>
      <title>Forschung</title>
      <link>https://frank-roesler.github.io/de/research_periodic/</link>
      <pubDate>Tue, 26 May 2020 11:53:04 +0100</pubDate>
      
      <guid>https://frank-roesler.github.io/de/research_periodic/</guid>
      <description>Diesen Eintrag gibt es bisher nur auf englisch. Deutsche Übersetzung folgt in Kürze!
Computing Spectra of Periodic Operators Research article:  Jonathan Ben-Artzi, Marco Marletta, Frank Rösler; Universal Algorithms for Computing Spectra of Periodic Operators, Numer. Math. (2022).
A Matlab implementation of the algorithm is available here.  Overview: Hamiltonians $\mathsf{H=-\Delta+V}$ with periodic potentials describe the movement of electrons in periodic media such as crystals. The spectra of Hamiltonians, which are periodic with respect to some lattice $\mathsf L$, are known to have a band structure, which provides a mathematical explanation for the existence of physical phenomena like conducting, insulating and semiconducting materials.</description>
    </item>
    
    <item>
      <title>Forschung</title>
      <link>https://frank-roesler.github.io/de/research_pseudospectrum/</link>
      <pubDate>Tue, 26 May 2020 11:53:04 +0100</pubDate>
      
      <guid>https://frank-roesler.github.io/de/research_pseudospectrum/</guid>
      <description>Diesen Eintrag gibt es bisher nur auf englisch. Deutsche Übersetzung folgt in Kürze!
Pseudospectra of Non-Hermitian Hamiltonians Research article:  Patrick W. Dondl, Patrick Dorey, Frank Rösler; A Bound on the Pseudospectrum for a Class of Non-normal Schrödinger Operators. Appl. Math. Res. Express 2016.  Overview: This was the first project of my PhD. The work is concerned with the Schrödinger equation with complex-valued potentials. In general, the eigenvalues (or the spectrum) of such operators could be any complex number, however, some potentials exhibit special symmetries (called PT-symmetry), which constrain their eigenvalues to lie on the real axis.</description>
    </item>
    
    <item>
      <title>Forschung</title>
      <link>https://frank-roesler.github.io/de/research_resonances/</link>
      <pubDate>Tue, 26 May 2020 11:53:04 +0100</pubDate>
      
      <guid>https://frank-roesler.github.io/de/research_resonances/</guid>
      <description>Diesen Eintrag gibt es bisher nur auf englisch. Deutsche Übersetzung folgt in Kürze!
Quantum Resonances for Potential Scattering Research article:  Jonathan Ben-Artzi, Marco Marletta, and Frank Rösler. Computing scattering resonances. J. Eur. Math. Soc. (JEMS), 2022. (A Matlab implementation of the algorithm is available here)  Overview: Quantum resonances can be defined as states whose wave function disperses very slowly in time and can therefore be considered as &amp;ldquo;almost bound states&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>Forschung</title>
      <link>https://frank-roesler.github.io/de/research_rough_domains/</link>
      <pubDate>Tue, 26 May 2020 11:53:04 +0100</pubDate>
      
      <guid>https://frank-roesler.github.io/de/research_rough_domains/</guid>
      <description>Diesen Eintrag gibt es bisher nur auf englisch. Deutsche Übersetzung folgt in Kürze!
Computing Vibration Modes of Fractal Drums Research article:  Frank Rösler, Alexei Stepanenko; Computing Eigenvalues of the Laplacian on Rough Domains, Preprint, arXiv:2104.09444.
(A Matlab implementation of the algorithm is available here)  Overview: In this recent research project my collaborator Alexei Stepanenko and I studied computational aspects of a classical problem in spectral theory: Computing the eigenmodes of the 2d surface of a drum.</description>
    </item>
    
    <item>
      <title>Forschung</title>
      <link>https://frank-roesler.github.io/de/research_selfadjoint/</link>
      <pubDate>Tue, 26 May 2020 11:53:04 +0100</pubDate>
      
      <guid>https://frank-roesler.github.io/de/research_selfadjoint/</guid>
      <description>Diesen Eintrag gibt es bisher nur auf englisch. Deutsche Übersetzung folgt in Kürze!
Computational Quantum Mechanics Research article:  Frank Rösler; On The Solvability Complexity Index for Unbounded Selfadjoint and Schrödinger Operators. Integral Equations and Operator Theory, (2019) 91:54. (A Matlab implementation of the algorithm is available here)  Overview: This work is concerned with the computational solution of the Schröinger eigenvalue problem. The Schrödinger equation is at the heart of the theory of Quantum Mechanics and its eigenfunctions and eigenvalues describe the bound states of quantum systems and their corresponding energy levels.</description>
    </item>
    
  </channel>
</rss>

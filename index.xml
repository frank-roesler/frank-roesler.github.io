<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Home on Frank Rösler</title>
    <link>https://frank-roesler.github.io/</link>
    <description>Recent content in Home on Frank Rösler</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 26 May 2020 11:51:44 +0100</lastBuildDate><atom:link href="https://frank-roesler.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Research</title>
      <link>https://frank-roesler.github.io/research/</link>
      <pubDate>Tue, 26 May 2020 11:53:04 +0100</pubDate>
      
      <guid>https://frank-roesler.github.io/research/</guid>
      <description>Publications and Preprints Preprints:  Frank Rösler, Alexei Stepanenko; Computing Eigenvalues of the Laplacian on Rough Domains, Preprint, arXiv:2104.09444.
(A Matlab implementation of the algorithm is available here) Jonathan Ben-Artzi, Marco Marletta, and Frank Rösler. Universal algorithms for solving inverse spectral problems, Preprint, arXiv:2203.13078.
(A Matlab implementation of the algorithm is available here)  Peer-Reviewed:  Jonathan Ben-Artzi, Marco Marletta, and Frank Rösler. Computing scattering resonances. J. Eur. Math. Soc. (JEMS), 2022.</description>
    </item>
    
    <item>
      <title>Teaching</title>
      <link>https://frank-roesler.github.io/teaching/</link>
      <pubDate>Tue, 26 May 2020 14:23:52 +0100</pubDate>
      
      <guid>https://frank-roesler.github.io/teaching/</guid>
      <description>Winter term 2019/20  Lecture on Measure Theory at Cardiff University.  Handwritten set of lecture notes: Measure Theory Video capture of the entire lecture freely available online: Measure Theory Cardiff 2019    Summer term 2018  Assistant for the course &amp;ldquo;Analysis 2&amp;rdquo; by Prof. M. Růžička at the University of Freiburg.  Winter term 2017/18  Assistant for the lecture &amp;ldquo;Analysis 1&amp;rdquo; by Prof. M. Růžička at the University of Freiburg.</description>
    </item>
    
    <item>
      <title>CV</title>
      <link>https://frank-roesler.github.io/cv/</link>
      <pubDate>Tue, 26 May 2020 14:30:19 +0100</pubDate>
      
      <guid>https://frank-roesler.github.io/cv/</guid>
      <description>Grants and Awards  2020: 2-year Marie Skłodowska Curie Fellowship for the project Computational Complexity in Quantum Mechanics (COCONUT) at Cardiff University. 2019: LMS Scheme 1 Conference Grant (amount £4,000) to support the workshop &amp;ldquo;Small Scales and Homogenisation&amp;rdquo; 2015: EPS Poster Prize, awarded by the European Physical Society, at workshop Pseudo-Hermitian Hamiltonians in Quantum Physics.  Education and Degrees  2018-present: Research Associate / Marie Curie Fellow, School of Mathematics, Cardiff University, Cardiff, UK.</description>
    </item>
    
    <item>
      <title>Links</title>
      <link>https://frank-roesler.github.io/links/</link>
      <pubDate>Tue, 26 May 2020 14:32:05 +0100</pubDate>
      
      <guid>https://frank-roesler.github.io/links/</guid>
      <description>This page contains links to recent or upcoming events and other activities and works of current interest to me.
Cardiff Online Analysis Seminar (CAOS): During the COVID-19 restrictions, Cardiff University has set up an online version of their analysis seminar. It is currently being continued as a hybrid version with both in person and online talks: https://jbenartzi.github.io/seminars.html
(Related: a great number of online research seminars are listed here: https://researchseminars.org/)
Springer E-Books: Springer have recently released over 400 ebooks for free on line.</description>
    </item>
    
    <item>
      <title>Hobby Projects</title>
      <link>https://frank-roesler.github.io/miscellaneous/</link>
      <pubDate>Tue, 26 May 2020 15:13:25 +0100</pubDate>
      
      <guid>https://frank-roesler.github.io/miscellaneous/</guid>
      <description>On this page I collected some small mathematical simulations that I coded as a hobby and that are nice to watch (choose from the menu). All simulations are implemented in basic Matlab or Python and the corresponding codes are freely available on Github.</description>
    </item>
    
    <item>
      <title>Contact</title>
      <link>https://frank-roesler.github.io/contact/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://frank-roesler.github.io/contact/</guid>
      <description>Please use the form below if you want to get in touch.
Your Name Email Address An email address is required.  Message   </description>
    </item>
    
    <item>
      <title>Hobby Projects</title>
      <link>https://frank-roesler.github.io/perfdom/</link>
      <pubDate>Sun, 16 Aug 2020 21:06:16 +0100</pubDate>
      
      <guid>https://frank-roesler.github.io/perfdom/</guid>
      <description>Periodically perforated domains Diffusion in a domain with periodically distributed obstacles can be macroscopically approximated by a reduced diffusion constant. This so-called homogenized constant can be computed numerically by solving an associated partial differential equation in a single periodic cell (the so-called cell problem). The classical theory has been developed in this article.
I have implemented two different methods of computing the homogenized diffusion constant for obstacles of arbitrary shape. The figure shows the solution of the cell problem for a circular obstacle.</description>
    </item>
    
    <item>
      <title>Hobby Projects</title>
      <link>https://frank-roesler.github.io/sir/</link>
      <pubDate>Sun, 16 Aug 2020 21:06:16 +0100</pubDate>
      
      <guid>https://frank-roesler.github.io/sir/</guid>
      <description>Fit SIR model As part of my Python learning, I coded this little app, that generates simulated data of an infectious disease wave and then fits a simple SIR model. The user can choose between steepest descent and congugate gradient methods in a GUI.
The source code is openly available at https://github.com/frank-roesler/SIR_fit
 </description>
    </item>
    
    <item>
      <title>Hobby Projects</title>
      <link>https://frank-roesler.github.io/cs/</link>
      <pubDate>Mon, 01 Jun 2020 16:49:58 +0100</pubDate>
      
      <guid>https://frank-roesler.github.io/cs/</guid>
      <description>Image Reconstruction via Compressed Sensing Compressed Sensing is now the state-of-the-art method in many applications that require images to be reconstructed from measured data. One such example is given by X-Ray CT measurements and the Radon transform.
The main idea behind the compressed sensing method is to exploit the fact that most images of interest are sparse in an appropriate representation, meaning that they can be compressed significantly without losing much information.</description>
    </item>
    
    <item>
      <title>Hobby Projects</title>
      <link>https://frank-roesler.github.io/denoising/</link>
      <pubDate>Mon, 01 Jun 2020 16:49:58 +0100</pubDate>
      
      <guid>https://frank-roesler.github.io/denoising/</guid>
      <description>Denoising Signals Methods from Machine Learning can be used in signal processing to improve the quality of noisy signals. A toy example that I have coded in PyTorch suggests that this method works well in situations where the signal has the form of Lorentz peaks. Such signals are commonly found in spectroscopy data. Qualitatively, such signals look like the following image (darker blue or red = real part, brighter blue or red = imaginary part of the signal).</description>
    </item>
    
    <item>
      <title>Hobby Projects</title>
      <link>https://frank-roesler.github.io/flatten/</link>
      <pubDate>Mon, 01 Jun 2020 16:49:58 +0100</pubDate>
      
      <guid>https://frank-roesler.github.io/flatten/</guid>
      <description>Flatten the curve To illustrate the &amp;ldquo;flatten the curve&amp;rdquo; strategy against COVID-19, I&amp;rsquo;ve coded this little simulation in Python. Blue dots represent healthy individuals, red dots represent infected ones. Whenever a blue dot gets too close to a red dot, it gets infected (and infectious) for a certain period of time. Globally, this dynamic leads to a wave-like phenomenon.
The code is here: https://github.com/frank-roesler/Files/blob/master/Flatten_curve.py
  First video: bad situation with high peak;     Second video: good situation, where the peak has been flattened by increasing the average distance between the dots (compare the axis labels).</description>
    </item>
    
    <item>
      <title>Hobby Projects</title>
      <link>https://frank-roesler.github.io/gan/</link>
      <pubDate>Mon, 01 Jun 2020 16:49:58 +0100</pubDate>
      
      <guid>https://frank-roesler.github.io/gan/</guid>
      <description>Teaching a Computer to Hallucinate A so-called Generative adversarial Network (GAN) is a combination of two neural networks (one called &amp;ldquo;generator&amp;rdquo;, the other called &amp;ldquo;discriminator&amp;rdquo;) designed to create images belonging to a predefined category. The two networks are set up to compete against one another: first, the generator creates an image from random noise, then the discriminator compares the generated image to a fixed training set.
The discriminator is trained to distinguish the real images (i.</description>
    </item>
    
    <item>
      <title>Hobby Projects</title>
      <link>https://frank-roesler.github.io/radon/</link>
      <pubDate>Mon, 01 Jun 2020 16:49:58 +0100</pubDate>
      
      <guid>https://frank-roesler.github.io/radon/</guid>
      <description>Inverse Radon-Transform The Radon transform is a mathematical mapping that has important applications in medical physics. It describes the raw data measured during an X-Ray or computed tomography (so-called sinograms).
The inverse Radon transform (IRT for short; sometimes also called filtered backprojection) allows to reconstruct the original image from the sinogram and is the key ingredient in obtaining high-quality X-Ray or CT images. A MATLAB function that automatically computes the IRT of an image is openly available on my GitHub page.</description>
    </item>
    
    <item>
      <title>Hobby Projects</title>
      <link>https://frank-roesler.github.io/reconstruction/</link>
      <pubDate>Mon, 01 Jun 2020 16:49:58 +0100</pubDate>
      
      <guid>https://frank-roesler.github.io/reconstruction/</guid>
      <description>Image reconstruction Example of Image reconstruction through inpainting using the heat equation. Initially, 97% of the image are lost. Using the remaining pixels as pinning points for a heat flow, one can recover a great deal of the information contained in the original image.
The Matlab code is available at https://github.com/frank-roesler/Files/blob/master/Inpainting.m   </description>
    </item>
    
    <item>
      <title>Hobby Projects</title>
      <link>https://frank-roesler.github.io/reinforcement/</link>
      <pubDate>Mon, 01 Jun 2020 16:49:58 +0100</pubDate>
      
      <guid>https://frank-roesler.github.io/reinforcement/</guid>
      <description>Reinforcement Learning Reinforcement Learning is a way to teach computers solve control tasks. Deep neural networks provide a powerful tool to build reinforcement learning models. This section presents an algorithm called &amp;ldquo;Deeo Q-Network&amp;rdquo; (DQN), which I have implemented to learn to play the classical TicTacToe (X vs O) game.
In a nutshell, a DQN algorithm assigns a value to any possible move in a given state of the game (i.e. for a given configuration of X&amp;rsquo;s and O&amp;rsquo;s on the board, how valuable will it be to place a X in any given free space).</description>
    </item>
    
    <item>
      <title>Hobby Projects</title>
      <link>https://frank-roesler.github.io/segmentation/</link>
      <pubDate>Mon, 01 Jun 2020 16:49:58 +0100</pubDate>
      
      <guid>https://frank-roesler.github.io/segmentation/</guid>
      <description>Image Segmentation with FCNs My GitHub repo now contains a collection of codes includes a PyTorch implementation of the fully convolutional (FCN) version of Alexnet (see https://arxiv.org/abs/1411.4038), which detects objects in images. The code in this package has been written with one goal in mind: keeping it simple. The model is written only for 1 type of object to be detected (in addition to background), and all functions and classes are explicit; nothing is pre-trained.</description>
    </item>
    
    <item>
      <title>Hobby Projects</title>
      <link>https://frank-roesler.github.io/turing/</link>
      <pubDate>Mon, 01 Jun 2020 16:49:58 +0100</pubDate>
      
      <guid>https://frank-roesler.github.io/turing/</guid>
      <description>Turing pattern Simple example of Turing pattern formation, coded in Matlab. Two solutions to a coupled PDE system compete until they reach a stable equilibrium. It is believed that this is the mechanism behind the formation of animal coat patterns.
The Matlab code is available at https://github.com/frank-roesler/Files/blob/master/Turing_FinDiff.m   </description>
    </item>
    
    <item>
      <title>Research</title>
      <link>https://frank-roesler.github.io/research_graphs/</link>
      <pubDate>Tue, 26 May 2020 11:53:04 +0100</pubDate>
      
      <guid>https://frank-roesler.github.io/research_graphs/</guid>
      <description>A Strange Vertex Condition Coming from Nowhere Research article:  Frank Rösler; A Strange Vertex Condition Coming from Nowhere. SIAM J. Math. Anal., 53(3), 3098&amp;ndash;3122, 2021  Overview: This is one of my single author papers in the field of asymptotic analysis. It is concerned with the combined effect of two domain properties: thin geometry and perforation.
Thin Geometry: Consider the Laplacian $\mathsf{-\Delta}$ on a domain $\mathsf{\Omega_\epsilon\subset\mathbb R^d}$ and suppose that $\mathsf{\Omega_\epsilon}$ approximates a graph $\mathsf\Gamma$ as $\mathsf{\epsilon\to0}$, as in the following figure.</description>
    </item>
    
    <item>
      <title>Research</title>
      <link>https://frank-roesler.github.io/research_helmholtz/</link>
      <pubDate>Tue, 26 May 2020 11:53:04 +0100</pubDate>
      
      <guid>https://frank-roesler.github.io/research_helmholtz/</guid>
      <description>Computing the Sound of the Sea in a Seashell Research article:  Jonathan Ben-Artzi, Marco Marletta, Frank Rösler; Computing the Sound of the Sea in a Seashell. Found. Comput. Math., 2021.
Click here to download the slides of a recent talk on the subject. A Matlab package based on the article is available here  Overview: This work considers the scatering of waves by obstacles in 2 dimensions. The mathematical basis for this phenomenon is the Laplacian operator $$\mathsf{H = -\Delta \quad\textsf{ on }\quad \mathbb R^2\setminus U,}$$ where $\mathsf U$ denotes the obstacle and we assume zero boundary conditions on the boundary of $\mathsf U$.</description>
    </item>
    
    <item>
      <title>Research</title>
      <link>https://frank-roesler.github.io/research_inverse/</link>
      <pubDate>Tue, 26 May 2020 11:53:04 +0100</pubDate>
      
      <guid>https://frank-roesler.github.io/research_inverse/</guid>
      <description>Reconstructing a Potential From its Scattering Data Research article:  Jonathan Ben-Artzi, Marco Marletta, and Frank Rösler. Universal algorithms for solving inverse spectral problems, Preprint, arXiv:2203.13078.
(A Matlab implementation of the algorithm is available here)  Overview: The so-called spectral problem for a Hamiltonian operator $\mathsf{-\frac{d^2}{dx^2}+q}$ consists of finding its spectrum given the potential function $\mathsf q$. In certain cases (e.g. if $\mathsf{q(x)=x^2}$ is the Harmonic Oscillator potential, or the equation is considered on a bounded interval $\mathsf{[a,b]}$), the spectrum is given by the set of eigenvalues, i.</description>
    </item>
    
    <item>
      <title>Research</title>
      <link>https://frank-roesler.github.io/research_perfdom/</link>
      <pubDate>Tue, 26 May 2020 11:53:04 +0100</pubDate>
      
      <guid>https://frank-roesler.github.io/research_perfdom/</guid>
      <description>Homogenisation in Perforated Domains Research article:  Patrick Dondl, Kirill Cherednichenko, Frank Rösler; Norm-Resolvent Convergence in Perforated Domains. Asymptotic Analysis, vol. 110, no. 3-4, pp. 163-184, 2018  Overview: A perforated domain is a domain, from which a periodic arrangement of balls is removed, where both the distance $\mathsf \epsilon$ and the radii $\mathsf{r_\epsilon}$ of the balls are much smaller than the diameter of the domain, as shown in the following figure.</description>
    </item>
    
    <item>
      <title>Research</title>
      <link>https://frank-roesler.github.io/research_periodic/</link>
      <pubDate>Tue, 26 May 2020 11:53:04 +0100</pubDate>
      
      <guid>https://frank-roesler.github.io/research_periodic/</guid>
      <description>Computing Spectra of Periodic Operators Research article:  Jonathan Ben-Artzi, Marco Marletta, Frank Rösler; Universal Algorithms for Computing Spectra of Periodic Operators, Numer. Math. (2022).
A Matlab implementation of the algorithm is available here.  Overview: Hamiltonians $\mathsf{H=-\Delta+V}$ with periodic potentials describe the movement of electrons in periodic media such as crystals. The spectra of periodic Hamiltonians are known to have a band structure, which provides a mathematical explanation for the existence of physical phenomena like conducting, insulating and semiconducting materials.</description>
    </item>
    
    <item>
      <title>Research</title>
      <link>https://frank-roesler.github.io/research_pseudospectrum/</link>
      <pubDate>Tue, 26 May 2020 11:53:04 +0100</pubDate>
      
      <guid>https://frank-roesler.github.io/research_pseudospectrum/</guid>
      <description>Pseudospectra of Non-Hermitian Hamiltonians Research article:  Patrick W. Dondl, Patrick Dorey, Frank Rösler; A Bound on the Pseudospectrum for a Class of Non-normal Schrödinger Operators. Appl. Math. Res. Express 2016.  Overview: This was the first project of my PhD. The work is concerned with the Schrödinger equation with complex-valued potentials. In general, the eigenvalues (or the spectrum) of such operators could be any complex number, however, some potentials exhibit special symmetries (called PT-symmetry), which constrain their eigenvalues to lie on the real axis.</description>
    </item>
    
    <item>
      <title>Research</title>
      <link>https://frank-roesler.github.io/research_resonances/</link>
      <pubDate>Tue, 26 May 2020 11:53:04 +0100</pubDate>
      
      <guid>https://frank-roesler.github.io/research_resonances/</guid>
      <description>Quantum Resonances for Potential Scattering Research article:  Jonathan Ben-Artzi, Marco Marletta, and Frank Rösler. Computing scattering resonances. J. Eur. Math. Soc. (JEMS), 2022. (A Matlab implementation of the algorithm is available here)  Overview: Quantum resonances can be defined as states whose wave function disperses very slowly in time and can therefore be considered as &amp;ldquo;almost bound states&amp;rdquo;. In physics, such phenomena arise in the description of unstable particles and radioactive decay.</description>
    </item>
    
    <item>
      <title>Research</title>
      <link>https://frank-roesler.github.io/research_rough_domains/</link>
      <pubDate>Tue, 26 May 2020 11:53:04 +0100</pubDate>
      
      <guid>https://frank-roesler.github.io/research_rough_domains/</guid>
      <description>Computing Vibration Modes of Fractal Drums Research article:  Frank Rösler, Alexei Stepanenko; Computing Eigenvalues of the Laplacian on Rough Domains, Preprint, arXiv:2104.09444.
(A Matlab implementation of the algorithm is available here)  Overview: In this recent research project my collaborator Alexei Stepanenko and I studied computational aspects of a classical problem in spectral theory: Computing the eigenmodes of the 2d surface of a drum. Those are given by the eigenfunctions and eigenvalues of the Laplace operator with zero boundary conditions: $$\mathsf{-\Delta u = \lambda u \quad\text{on the drum }\mathcal{O},} \tag{1}$$ where $u$ models the vertical displacement of the drum&amp;rsquo;s membrane and $\lambda$ its frequency.</description>
    </item>
    
    <item>
      <title>Research</title>
      <link>https://frank-roesler.github.io/research_selfadjoint/</link>
      <pubDate>Tue, 26 May 2020 11:53:04 +0100</pubDate>
      
      <guid>https://frank-roesler.github.io/research_selfadjoint/</guid>
      <description>Computational Quantum Mechanics Research article:  Frank Rösler; On The Solvability Complexity Index for Unbounded Selfadjoint and Schrödinger Operators. Integral Equations and Operator Theory, (2019) 91:54. (A Matlab implementation of the algorithm is available here)  Overview: This work is concerned with the computational solution of the Schröinger eigenvalue problem. The Schrödinger equation is at the heart of the theory of Quantum Mechanics and its eigenfunctions and eigenvalues describe the bound states of quantum systems and their corresponding energy levels.</description>
    </item>
    
  </channel>
</rss>
